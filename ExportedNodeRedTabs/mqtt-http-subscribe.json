[
    {
        "id": "a435d90b1b37ab01",
        "type": "http in",
        "z": "4627b9154935be56",
        "name": "[get] /mqtt/subscribe",
        "url": "/mqtt/subscribe",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1030,
        "wires": [
            [
                "6f3d3419053a9380"
            ]
        ]
    },
    {
        "id": "6f3d3419053a9380",
        "type": "function",
        "z": "4627b9154935be56",
        "name": "prepare mosquitto_sub command",
        "func": "// Extract topic from query params and set default timeout\nconst topic = msg.req.query.topic || 'default/topic';\nconst timeout = parseInt(msg.req.query.timeout || 30000);\nconst host = msg.req.query.host || 'localhost';\nconst port = msg.req.query.port || '4140';\n\n// Build the mosquitto_sub command\n// -C 1: exit after receiving a single message\n// -W timeout_ms: set timeout in milliseconds\n// -h host: MQTT broker host\n// -p port: MQTT broker port\n// -t topic: topic to subscribe to\nmsg.payload = `mosquitto_sub -C 1 -W ${timeout} -h ${host} -p ${port} -t \"${topic}\"`;\n\n// Store original request info for response handling\nmsg.originalTopic = topic;\nmsg.originalTimeout = timeout;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1030,
        "wires": [
            [
                "87850d7ef7a2fa54"
            ]
        ]
    },
    {
        "id": "87850d7ef7a2fa54",
        "type": "exec",
        "z": "4627b9154935be56",
        "name": "execute mosquitto_sub",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "60",
        "winHide": false,
        "oldrc": false,
        "x": 650,
        "y": 1030,
        "wires": [
            [
                "36d7f22f5618abcd"
            ],
            [
                "36d7f22f5618abcd"
            ],
            [
                "f12e345ab678c901"
            ]
        ]
    },
    {
        "id": "36d7f22f5618abcd",
        "type": "function",
        "z": "4627b9154935be56",
        "name": "format response",
        "func": "// Standard outputs come on the first output of exec node\n// If we get a message here, it means we received an MQTT message\n\nif (msg.payload) {\n    // We have output from mosquitto_sub (success case)\n    return {\n        payload: {\n            topic: msg.originalTopic,\n            payload: msg.payload.trim(),\n            timestamp: new Date().toISOString()\n        },\n        statusCode: 200\n    };\n} else {\n    // Empty payload but not an error - treat as timeout\n    return {\n        payload: {\n            error: \"Timeout waiting for MQTT message\",\n            topic: msg.originalTopic,\n            timeout_ms: msg.originalTimeout\n        },\n        statusCode: 404\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1030,
        "wires": [
            [
                "98765a4b3c2d1e0f"
            ]
        ]
    },
    {
        "id": "f12e345ab678c901",
        "type": "function",
        "z": "4627b9154935be56",
        "name": "handle errors",
        "func": "// This handles stderr output from exec\n// Convert to error response\nreturn {\n    payload: {\n        error: \"Error executing MQTT subscription\",\n        details: msg.payload,\n        topic: msg.originalTopic\n    },\n    statusCode: 500\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1070,
        "wires": [
            [
                "98765a4b3c2d1e0f"
            ]
        ]
    },
    {
        "id": "98765a4b3c2d1e0f",
        "type": "http response",
        "z": "4627b9154935be56",
        "name": "send http response",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1090,
        "y": 1050,
        "wires": []
    }
]
